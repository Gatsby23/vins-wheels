%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam;
imu: 1
num_of_cam: 1
wheels: 1
have_vel_T_cam: 0  #是否有轮速计到相机的外参
imu_factor: 2   #imu factor 选项 0:是自己的  1:是原始的  2:是encode
cam_num: 0      #0是前视相机  1是后视相机
show_message: 0 #是否显示信息

imu_topic: "/imu0"
image0_topic: "/cam0/image_raw"
image1_topic: "/cam1/image_raw"
output_path: "/home/q/linux/output/newdata/"
#output_path:  "/home/qcx/linux/output/newdata/"

cam0_calib: "cam0_pinhole_38-39.yaml"
cam1_calib: "cam1_pinhole_38-39.yaml"
image_width: 1280
image_height: 560
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
#origin
body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -0.00680499   ,-0.0153215,      0.99985,      1.71239,
           -0.999977,  0.000334627,  -0.00680066,     0.247401,
           -0.000230383,    -0.999883,   -0.0153234,     -0.11589,
           0,            0,            0,            1]
#calib
#body_T_cam0: !!opencv-matrix
#   rows: 4
#   cols: 4
#   dt: d
#   data: [ 2.0945598266572940e-03, -2.6036605260423840e-02,9.9965879579266748e-01, 1.8060370020348699e+00,
#           -9.9999715058058325e-01, 1.0903517663014561e-03,2.1236675212054079e-03, 2.1992551170047092e-01,
#           -1.1452728266455048e-03, -9.9966039549415930e-01,-2.6034247264208776e-02, -8.5891720600646579e-02,
#           0., 0., 0., 1. ]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0.999993563047836,-0.001898691765710,0.003044475730350,4.815038111051128e+02,
          0.001888303713281,0.999992398468884,0.003411350690774,1.117124984377098,
          -0.003050929691139,-0.003405579837246,0.999989546872362,-5.031426420378582,
         0,0,0,1]

body_T_vel: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
#   data: [ 0.999808,-0.0,-0.0195742,0.07,
#           0,1.0,-0.0,0.0,
#           0.0195742,0.0,0.999808,-1.7,
#           0,0,0,1 ]

   data: [1.0 , 0.0 , 0.0 ,0.07,  #原始的
          0.0 , 1.0 , 0.0, 0.0,
          0.0 , 0.0 , 1.0 ,-1.7,
          0,0,0,1]

#Multiple thread support
multiple_thread: 0

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 4  # max solver itration time (ms), to guarantee real time
max_num_iterations: 100   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)关键帧阈值
max_ang_vel: 500.0 #角速度阈值  角速度阈值2.0,vel= vel*0.8时z轴漂移小
max_cnt_1: 0  #特征点误差小于1的阈值
max_angvel_bias: 0  #优化bias时的角速度阈值

#imu parameters       The more accurate parameters you provide, the better performance
#acc_n: 0.1          # accelerometer measurement noise standard deviation.
#gyr_n: 0.01         # gyroscope measurement noise standard deviation.
#acc_w: 0.001        # accelerometer bias random work noise standard deviation.
#gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.
#g_norm: 9.81007     # gravity magnitude
#enc_n: 0.2       # encoder readings noise standard deviation.

#acc_n: 0.0268014618074         # accelerometer measurement noise standard deviation. #0.599298904976
#gyr_n: 0.00888232829671        # gyroscope measurement noise standard deviation.     #0.198614898699
#acc_w: 0.00262960861593         # accelerometer bias random work noise standard deviation.  #0.02
#gyr_w: 0.000379565782927       # gyroscope bias random work noise standard deviation.     #4.0e-5
#g_norm: 9.81007     # gravity magnitude

#acc_n: 2.1657228523252730e-02          # accelerometer measurement noise standard deviation. #0.599298904976
#gyr_n: 2.1923690143745844e-03        # gyroscope measurement noise standard deviation.     #0.198614898699
#acc_w: 3.8153871149178200e-04         # accelerometer bias random work noise standard deviation.  #0.02
#gyr_w: 1.4221215955051228e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
#g_norm: 9.81007     # gravity magnitude

#imu parameters   26 rems7.1 windowSize10    The more accurate parameters you provide, the better performance
#acc_n: 0.1          # accelerometer measurement noise standard deviation.
#gyr_n: 0.01         # gyroscope measurement noise standard deviation.
#acc_w: 0.1        # accelerometer bias random work noise standard deviation.
#gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.
#g_norm: 9.81007     # gravity magnitude
#enc_n: 0.2       # encoder readings noise standard deviation.

#imu parameters  39rems 8.9      The more accurate parameters you provide, the better performance
#acc_n: 0.4          # accelerometer measurement noise standard deviation.
#gyr_n: 0.01         # gyroscope measurement noise standard deviation.
#acc_w: 0.001        # accelerometer bias random work noise standard deviation.
#gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.
#g_norm: 9.81007     # gravity magnitude
#enc_n: 0.2       # encoder readings noise standard deviation.

#imu parameters  39rems7.7  windowsSize=15时rems=6.3   The more accurate parameters you provide, the better performance
acc_n: 0.4          # accelerometer measurement noise standard deviation.
gyr_n: 0.01         # gyroscope measurement noise standard deviation.
acc_w: 0.01        # accelerometer bias random work noise standard deviation.
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.
g_norm: 9.81007     # gravity magnitude
enc_n: 0.2       # encoder readings noise standard deviation.

#imu parameters       The more accurate parameters you provide, the better performance
#acc_n: 0.1          # accelerometer measurement noise standard deviation.
#gyr_n: 0.01         # gyroscope measurement noise standard deviation.
#acc_w: 0.1        # accelerometer bias random work noise standard deviation.
#gyr_w: 0.001       # gyroscope bias random work noise standard deviation.
#g_norm: 9.81007     # gravity magnitude
#enc_n: 0.2       # encoder readings noise standard deviation.

#imu parameters       The more accurate parameters you provide, the better performance
#acc_n: 0.4          # accelerometer measurement noise standard deviation.
#gyr_n: 0.01         # gyroscope measurement noise standard deviation.
#acc_w: 0.001        # accelerometer bias random work noise standard deviation.
#gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.
#g_norm: 9.81007     # gravity magnitude
#enc_n: 0.2       # encoder readings noise standard deviation.

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/q/linux/output/newdata/" # save and load path
#pose_graph_save_path: "/home/qcx/linux/output/newdata/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0
